---
title: "Lab 5: Murder in SQL City"
author: "Tillman Erb"
format: 
  html:  
    embed-resources: true
    code-tools: true
    toc: true
editor: source
code-fold: true
self-contained: true
theme: darkly
execute:
  echo: true
  error: true
  warning: false
---

For this lab, you will be joining and filtering related datasets to solve a murder mystery!

## Instructions

Northwestern University's Knight Lab wanted to help sharpen users' database skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different pieces of information pertinent to the crime - people, social media check-ins, driver's licenses, crime scene reports, police interviews, and more!

![Database schema](https://mystery.knightlab.com/schema.png)

Solve the murder mystery, showing **all of your work in this document**. Your document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the tables manually.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.

### Tips 

You may find the `pull()` function handy for displaying each clue as you go along.


## Access the Data

This code chunk will read in all of the tables of data for you. Don't modify or remove this!

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/atheobold/groupworthy-data-science/main/labs/instructions/lab-5-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!

```{r}
#| label: inspecting-crime-scene-report

crime_scene_report
```
#### Filtering crime scene data for murders that took place on the given date in the given city
```{r}
#| Label: Filtering crime scene

crime_scene_report_filtered <- crime_scene_report |>
  #Converting to date type
  mutate(date = ymd(date)) |>
  filter(date == ymd(20180115),
         type == 'murder',
         city == 'SQL City')

#Displaying description
crime_scene_report_filtered$description
```
#### With this information, filtering the 'person' dataset for Northwestern Dr and Franklin Ave
```{r}
#| label: Filtering person dataset
#Finding the id of the first witness
person |> 
  filter(address_street_name == 'Northwestern Dr',
         address_number == max(address_number)
         )

#Finding the id of the second witness
person |> 
  filter(address_street_name == 'Franklin Ave',
         str_detect(name, "^Annabel")
         )
```
The two witnesses have IDs 16371 and 14887.

#### Checking interviews for these two IDs
```{r}
#| label: Filtering interviews
witness_test <- interview |>
  filter(person_id %in% c(16371, 14887))

witness_test$transcript
```

#### Checking licence plates for those that include H42W, matching gender description
Getting list of licence IDs for later use
```{r}
#| label: Filtering licence plates
licence_id <- drivers_license |>
  filter(str_detect(plate_number, "H42W"),
         gender == 'male')
licence_id <- licence_id$id
licence_id
```

#### Filtering gym membership check in times
Filtering IDs for the one listed in the description
```{r}
#| label: Filtering gym checkins
membership_ids <- get_fit_now_check_in |>
  mutate(check_in_date = ymd(check_in_date)) |>
  filter(check_in_date == ymd(20180109),
         str_detect(membership_id, "^48Z"))

membership_ids <- membership_ids$membership_id
membership_ids
```

#### Filtering gym membership for gold, and for the IDs in the list above.
Getting person_id to filter the person table with 
```{r}
#| label: Filtering gym membership

person_ids <- get_fit_now_member |>
  filter(id %in% membership_ids,
         membership_status == 'gold')

person_ids <- person_ids$person_id
person_ids
```

#### Filtering the person table 
Finding matching licence ids and person ids from the gym membership list and licence list
```{r}
#| label: Final filtering

person |>
  filter(id %in% person_ids,
         license_id %in% licence_id)
```


**Follow the evidence to the person responsible for the murder, building a report as you go.**
Hint: Make sure you check for interviews with any suspects!


## And the final suspect is...

*Jeremy Bowers*
